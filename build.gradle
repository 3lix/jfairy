apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "sonar-runner"
apply plugin: 'jacoco'
apply plugin: 'pitest'

sourceCompatibility = 1.7
targetCompatibility = 1.7

buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:0.30.1'
		classpath "org.pitest:pitest:0.31"
	}
}

dependencies {
	compile 'org.yaml:snakeyaml:[1.0,2.0)'
	compile 'org.apache.commons:commons-lang3:3.1'
	compile 'com.google.guava:guava:15.0'
	compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'joda-time:joda-time:2.3'
	compile 'com.google.inject:guice:3.0'
	testCompile 'commons-validator:commons-validator:1.4.0'
	testCompile 'ch.qos.logback:logback-classic:1.0.13'
	testCompile 'org.codehaus.groovy:groovy-all:2.1.9'
	testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
	testCompile 'cglib:cglib-nodep:2.2.2'
	testCompile 'org.objenesis:objenesis:2.0'
}
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}
task sourceJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}
artifacts {
	archives jar
	archives sourceJar
	archives javadocJar
}


repositories {
	mavenCentral()
}

jar {
	manifest {
		attributes(
				"Application-Name": "Fairyland",
				"Implementation-Title": "Fairyland",
				"Implementation-Version": version,
				"Implementation-Vendor": 'Codearte',
				'Built-Date': new Date(),
				'Built-JDK': System.properties['java.version'],
				'Built-Gradle': gradle.gradleVersion,
				"Built-By": System.properties['user.name'])
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			name = 'Codearte Public Repository'
			repository(id: 'codearte-repository', url: 'https://api.bintray.com/maven/codearte/public/fairyland'){
				authentication(userName: bintrayUser, password: bintrayKey)
			}

			pom.project {
				name 'Fairyland'
				description 'Fairyland - Java fake data generator'
				url 'http://codearte.github.io/fairyland/'
				licenses {
					license {
						name 'The Apache Software License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0'
						distribution 'repo'
					}
				}

				scm {
					connection 'scm:git:git@github.com:Codearte/fairyland.git'
					developerConnection 'scm:git:git@github.com:Codearte/fairyland.git'
					url 'https://github.com/Codearte/fairyland'
				}

			}
		}
	}
}

sonarRunner {
	sonarProperties {
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.jdbc.url", "jdbc:mysql://localhost/sonar"
		property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
		property "sonar.jdbc.username", "sonar"
	}
}

pitest {
	targetClasses = ['eu.codearte.fairyland.*']
	threads = 4
	pitestVersion = 0.31
}

test {
	ignoreFailures = true
}

wrapper {
	gradleVersion '1.8'
}
